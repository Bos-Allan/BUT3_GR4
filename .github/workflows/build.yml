name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: builder
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.4.1
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: Bankiut
          MYSQL_USER: root
          MYSQL_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        volumes:
          - mariadb_data:/var/lib/mysql

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Attendre que MariaDB soit prêt
      - name: Wait for MariaDB to be ready
        run: |
          until docker exec $(docker ps -q --filter "ancestor=mariadb:10.4.1") mysqladmin --user=root --password=root --host=127.0.0.1 --port=3306 ping --silent; do
            echo "Waiting for MariaDB to be ready..."
            sleep 5
          done

      # Créer les bases de données
      - name: Create databases
        run: |
          docker exec $(docker ps -q --filter "ancestor=mariadb:10.4.1") mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS Bankiut;"
          docker exec $(docker ps -q --filter "ancestor=mariadb:10.4.1") mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS Bankiut_test;"

      # Copier et importer les fichiers SQL
      - name: Import bankiut.sql
        run: |
          docker cp "$GITHUB_WORKSPACE/script/bankiut.sql" $(docker ps -q --filter "ancestor=mariadb:10.4.1"):/tmp/bankiut.sql
          docker exec $(docker ps -q --filter "ancestor=mariadb:10.4.1") /bin/sh -c "mysql -u root -proot Bankiut < /tmp/bankiut.sql"

      - name: Import bankiuttest.sql
        run: |
          docker cp "$GITHUB_WORKSPACE/script/bankiuttest.sql" $(docker ps -q --filter "ancestor=mariadb:10.4.1"):/tmp/bankiuttest.sql
          docker exec $(docker ps -q --filter "ancestor=mariadb:10.4.1") /bin/sh -c "mysql -u root -proot Bankiut_test < /tmp/bankiuttest.sql"

      - name: Import dumpSQL.sql
        run: |
          docker cp "$GITHUB_WORKSPACE/script/dumpSQL.sql" $(docker ps -q --filter "ancestor=mariadb:10.4.1"):/tmp/dumpSQL.sql
          docker exec $(docker ps -q --filter "ancestor=mariadb:10.4.1") /bin/sh -c "mysql -u root -proot Bankiut < /tmp/dumpSQL.sql"

      - name: Import dumpSQL_JUnitTest.sql
        run: |
          docker cp "$GITHUB_WORKSPACE/script/dumpSQL_JUnitTest.sql" $(docker ps -q --filter "ancestor=mariadb:10.4.1"):/tmp/dumpSQL_JUnitTest.sql
          docker exec $(docker ps -q --filter "ancestor=mariadb:10.4.1") /bin/sh -c "mysql -u root -proot Bankiut_test < /tmp/dumpSQL_JUnitTest.sql"

      - name: execute
        working-directory: ./_00_ASBank2023
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Bos-Allan_BUT3_GR4
